# Logger racine
log4j.appender.Stdout=org.apache.log4j.ConsoleAppender
log4j.appender.Stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.Stdout.layout.ConversionPattern=[%d{ISO8601}] %-5p - %-26.26c{1} - %X{ow-url} - %m\n

log4j.rootLogger=WARN, Stdout

# Data import (initialization)
log4j.logger.org.likide.bbgraph.init=INFO
log4j.logger.org.iglooproject.jpa.more.util.init.service.AbstractImportDataServiceImpl=INFO

# Data upgrades
log4j.logger.org.likide.bbgraph.core.business.upgrade.service.DataUpgradeManagerImpl=INFO

# hibernate queries
#log4j.logger.org.hibernate.SQL=DEBUG
#log4j.logger.org.hibernate.type=INFO

# schema initialization
#log4j.logger.org.hibernate.tool.hbm2ddl=DEBUG

# configuration logging
log4j.logger.org.iglooproject.spring.util.ConfigurationLogger=INFO

# permet de vérifier le binding de jul à slf4j au démarrage de la webapp
log4j.logger.org.iglooproject.commons.util.logging.SLF4JLoggingListener=INFO
# permet de contrôler si nécessaire les logs jersey
#log4j.logger.com.sun.jersey.api.container.filter.LoggingFilter=INFO

# A passer en DEBUG pour avoir les éventuelles erreurs d'analyse de sélecteurs CSS
log4j.logger.org.iglooproject.wicket.more.notification.service.impl.SimplePhlocCssHtmlNotificationCssRegistry=WARN

# PropertyService
log4j.logger.org.iglooproject.spring.property.service.PropertyServiceImpl=INFO

#log4j.logger.org.jgroups=DEBUG